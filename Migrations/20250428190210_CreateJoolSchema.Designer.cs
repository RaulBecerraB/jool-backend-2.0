// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using jool_backend.Repository;

#nullable disable

namespace jool_backend.Migrations
{
    [DbContext(typeof(JoolContext))]
    [Migration("20250428190210_CreateJoolSchema")]
    partial class CreateJoolSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("jool_backend.Models.Hashtag", b =>
                {
                    b.Property<int>("hashtag_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("hashtag_id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("used_count")
                        .HasColumnType("int");

                    b.HasKey("hashtag_id");

                    b.HasIndex("name")
                        .IsUnique();

                    b.ToTable("Hashtags");
                });

            modelBuilder.Entity("jool_backend.Models.Question", b =>
                {
                    b.Property<int>("question_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("question_id"));

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("stars")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<int>("views")
                        .HasColumnType("int");

                    b.HasKey("question_id");

                    b.HasIndex("user_id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("jool_backend.Models.QuestionHashtag", b =>
                {
                    b.Property<int>("question_id")
                        .HasColumnType("int");

                    b.Property<int>("hashtag_id")
                        .HasColumnType("int");

                    b.HasKey("question_id", "hashtag_id");

                    b.HasIndex("hashtag_id");

                    b.ToTable("QuestionHashtags");
                });

            modelBuilder.Entity("jool_backend.Models.Response", b =>
                {
                    b.Property<int>("response_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("response_id"));

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("likes")
                        .HasColumnType("int");

                    b.Property<int>("question_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("response_id");

                    b.HasIndex("question_id");

                    b.HasIndex("user_id");

                    b.ToTable("Responses");
                });

            modelBuilder.Entity("jool_backend.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("user_id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<byte[]>("image")
                        .HasColumnType("longblob");

                    b.Property<bool>("is_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("phone")
                        .HasColumnType("varchar(20)");

                    b.HasKey("user_id");

                    b.HasIndex("email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("jool_backend.Models.Question", b =>
                {
                    b.HasOne("jool_backend.Models.User", "User")
                        .WithMany("Questions")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("jool_backend.Models.QuestionHashtag", b =>
                {
                    b.HasOne("jool_backend.Models.Hashtag", "Hashtag")
                        .WithMany("QuestionHashtags")
                        .HasForeignKey("hashtag_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jool_backend.Models.Question", "Question")
                        .WithMany("QuestionHashtags")
                        .HasForeignKey("question_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hashtag");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("jool_backend.Models.Response", b =>
                {
                    b.HasOne("jool_backend.Models.Question", "Question")
                        .WithMany("Responses")
                        .HasForeignKey("question_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("jool_backend.Models.User", "User")
                        .WithMany("Responses")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("jool_backend.Models.Hashtag", b =>
                {
                    b.Navigation("QuestionHashtags");
                });

            modelBuilder.Entity("jool_backend.Models.Question", b =>
                {
                    b.Navigation("QuestionHashtags");

                    b.Navigation("Responses");
                });

            modelBuilder.Entity("jool_backend.Models.User", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("Responses");
                });
#pragma warning restore 612, 618
        }
    }
}
